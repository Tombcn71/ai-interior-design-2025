// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or your actual database provider
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  password       String?
  credits        Int       @default(0)
  isAdmin        Boolean   @default(false) // This field needs to be added to your database
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  accounts       Account[]
  sessions       Session[]
  designs        Design[]
  creditPurchases CreditPurchase[]
  couponUsages   CouponUsage[]
}

// Include your other models here...
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Add your other models here...
model Design {
  id        String   @id @default(cuid())
  userId    String
  // Add other fields as needed
  user      User     @relation(fields: [userId], references: [id])
}

model CreditPurchase {
  id            String   @id @default(cuid())
  userId        String
  amount        Int
  transactionId String
  paymentStatus String
  createdAt     DateTime @default(now())
  user          User     @relation(fields: [userId], references: [id])
}

model CouponUsage {
  id        String   @id @default(cuid())
  userId    String
  // Add other fields as needed
  user      User     @relation(fields: [userId], references: [id])
}

